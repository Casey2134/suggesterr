# Generated by Django 4.2.7 on 2025-07-17 17:26

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('movies', '0008_movie_mpaa_rating'),
        ('tv_shows', '0002_tvshow_tv_rating'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('accounts', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='FamilyProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('profile_name', models.CharField(max_length=100)),
                ('age', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(99)])),
                ('max_movie_rating', models.CharField(choices=[('G', 'General Audiences'), ('PG', 'Parental Guidance Suggested'), ('PG-13', 'Parents Strongly Cautioned'), ('R', 'Restricted'), ('NC-17', 'Adults Only')], default='G', max_length=10)),
                ('max_tv_rating', models.CharField(choices=[('TV-Y', 'All Children'), ('TV-Y7', 'Children 7+'), ('TV-G', 'General Audience'), ('TV-PG', 'Parental Guidance'), ('TV-14', 'Parents Strongly Cautioned'), ('TV-MA', 'Mature Audiences')], default='TV-Y', max_length=10)),
                ('is_active', models.BooleanField(default=True)),
                ('avatar_url', models.URLField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('parent_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='family_profiles', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['profile_name'],
                'unique_together': {('parent_user', 'profile_name')},
            },
        ),
        migrations.CreateModel(
            name='ProfileLimits',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('daily_request_limit', models.PositiveIntegerField(default=10, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(100)])),
                ('weekly_request_limit', models.PositiveIntegerField(default=50, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(500)])),
                ('monthly_request_limit', models.PositiveIntegerField(default=200, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(1000)])),
                ('daily_viewing_limit', models.PositiveIntegerField(default=120, help_text='Daily viewing limit in minutes')),
                ('weekly_viewing_limit', models.PositiveIntegerField(default=840, help_text='Weekly viewing limit in minutes')),
                ('bedtime_hour', models.PositiveIntegerField(default=21, help_text='Hour when content access is restricted (24-hour format)', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(23)])),
                ('wakeup_hour', models.PositiveIntegerField(default=7, help_text='Hour when content access is allowed (24-hour format)', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(23)])),
                ('weekend_extended_hours', models.BooleanField(default=True, help_text='Allow extended hours on weekends')),
                ('weekend_bedtime_hour', models.PositiveIntegerField(default=23, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(23)])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('profile', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='limits', to='accounts.familyprofile')),
            ],
        ),
        migrations.CreateModel(
            name='ContentRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('request_message', models.TextField(blank=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('approved', 'Approved'), ('denied', 'Denied')], default='pending', max_length=20)),
                ('parent_response', models.TextField(blank=True)),
                ('reviewed_at', models.DateTimeField(blank=True, null=True)),
                ('temporary_access', models.BooleanField(default=False)),
                ('access_expires_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('movie', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='movies.movie')),
                ('profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='content_requests', to='accounts.familyprofile')),
                ('reviewed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reviewed_requests', to=settings.AUTH_USER_MODEL)),
                ('tv_show', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='tv_shows.tvshow')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ProfileActivity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('activity_type', models.CharField(choices=[('content_view', 'Content Viewed'), ('content_request', 'Content Requested'), ('request_denied', 'Request Denied'), ('content_blocked', 'Content Blocked'), ('limit_exceeded', 'Limit Exceeded')], max_length=20)),
                ('description', models.TextField(blank=True)),
                ('metadata', models.JSONField(blank=True, default=dict)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('movie', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='movies.movie')),
                ('profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='activities', to='accounts.familyprofile')),
                ('tv_show', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='tv_shows.tvshow')),
            ],
            options={
                'ordering': ['-timestamp'],
                'indexes': [models.Index(fields=['profile', 'activity_type'], name='accounts_pr_profile_4b022e_idx'), models.Index(fields=['profile', 'timestamp'], name='accounts_pr_profile_7f05f4_idx')],
            },
        ),
        migrations.CreateModel(
            name='ParentApprovedContent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('approval_reason', models.TextField(blank=True)),
                ('permanent_access', models.BooleanField(default=True)),
                ('expires_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('approved_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='approved_content', to=settings.AUTH_USER_MODEL)),
                ('movie', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='movies.movie')),
                ('profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='approved_content', to='accounts.familyprofile')),
                ('tv_show', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='tv_shows.tvshow')),
            ],
            options={
                'unique_together': {('profile', 'movie'), ('profile', 'tv_show')},
            },
        ),
        migrations.CreateModel(
            name='ContentFilter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content_type', models.CharField(choices=[('movie', 'Movie'), ('tv_show', 'TV Show')], max_length=10)),
                ('reason', models.CharField(blank=True, max_length=200)),
                ('is_blocked', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('movie', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='movies.movie')),
                ('profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='content_filters', to='accounts.familyprofile')),
                ('tv_show', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='tv_shows.tvshow')),
            ],
            options={
                'unique_together': {('profile', 'movie'), ('profile', 'tv_show')},
            },
        ),
    ]
